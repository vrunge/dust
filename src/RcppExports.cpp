// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sdDiff
double sdDiff(Rcpp::NumericVector& y, std::string method);
RcppExport SEXP _dust_sdDiff(SEXP ySEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(sdDiff(y, method));
    return rcpp_result_gen;
END_RCPP
}
// data_normalization
NumericVector data_normalization(Rcpp::NumericVector& y, std::string type);
RcppExport SEXP _dust_data_normalization(SEXP ySEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(data_normalization(y, type));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_DUSTMODULE1D();
RcppExport SEXP _rcpp_module_boot_DUSTMODULEMeanVar();

static const R_CallMethodDef CallEntries[] = {
    {"_dust_sdDiff", (DL_FUNC) &_dust_sdDiff, 2},
    {"_dust_data_normalization", (DL_FUNC) &_dust_data_normalization, 2},
    {"_rcpp_module_boot_DUSTMODULE1D", (DL_FUNC) &_rcpp_module_boot_DUSTMODULE1D, 0},
    {"_rcpp_module_boot_DUSTMODULEMeanVar", (DL_FUNC) &_rcpp_module_boot_DUSTMODULEMeanVar, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_dust(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
